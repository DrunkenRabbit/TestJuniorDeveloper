{"version":3,"sources":["redux/reducers/workers_reducer.js","redux/redux-store.js","serviceWorker.js","components/Header/Header.jsx","components/WorkersTable/WorkersTable.jsx","redux/StoreContext.js","components/WorkersTable/WorkersTableContainer.jsx","components/EditBlock/EditBlock.jsx","components/EditBlock/EditBlockContainer.jsx","components/Main/Main.jsx","components/Main/MainContainer.jsx","components/Footer/Footer.jsx","index.js"],"names":["initialState","workers","NewWorker","name","position","birth_date","sex","fired","deleteId","undefined","count","errorMessage","workersReducer","store","action","type","newWorker","newWorkers","filter","n","id","i","length","needPerson","clear","reducers","combineReducers","createStore","Boolean","window","location","hostname","match","useStyles","makeStyles","theme","icon","marginRight","spacing","Header","props","classes","CssBaseline","AppBar","Toolbar","className","Typography","variant","color","noWrap","WorkersTable","workerList","columns","root","width","container","maxHeight","React","useState","page","setPage","rowsPerPage","setRowsPerPage","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","map","column","TableCell","key","style","minWidth","label","TableBody","slice","row","onClick","setNewDeleteId","selected","hover","role","tabIndex","value","date","day","month","year","formatDate","TablePagination","rowsPerPageOptions","component","onChangePage","event","newPage","onChangeRowsPerPage","target","StoreContext","createContext","WorkersTableContainer","Consumer","getState","dispatch","getWorkerById","Component","display","flexWrap","textField","marginLeft","formControl","margin","EditBlock","noValidate","autoComplete","TextField","onChange","e","onChangeWorkerName","workerData","fullWidth","onChangeWorkerBirthDate","InputLabelProps","shrink","FormControl","InputLabel","Select","labelId","onChangeWorkerPosition","MenuItem","FormLabel","RadioGroup","onChangeWorkerSex","FormControlLabel","control","Radio","Switch","checked","onChangeWorkerFired","EditBlockContainer","birthDate","changeWorkerFired","changeWorkerName","changeWorkerPosition","changeWorkerSex","Main","flexGrow","marginTop","rootGrid","paddingTop","paddingBottom","Container","Grid","justify","item","xs","md","ButtonGroup","size","Button","AddNewWorker","DeleteWorker","disabled","clearEdit","MainContainer","footer","padding","Footer","align","gutterBottom","App","rerenderEntireTree","ReactDOM","render","Provider","document","getElementById","subscribe","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e47b042b.chunk.js","sourcesContent":["const CREATE_NEW_WORKER = \"CREATE_NEW_WORKER\";\r\nconst CHANGE_WORKER_NAME = \"CHANGE_WORKER_NAME\";\r\nconst CHANGE_WORKER_POSITION = \"CHANGE_WORKER_POSITION\";\r\nconst CHANGE_WORKER_BIRTH_DATE = \"CHANGE_WORKER_BIRTH_DATE\";\r\nconst CHANGE_WORKER_SEX = \"CHANGE_WORKER_SEX\";\r\nconst CHANGE_WORKER_FIRED = \"CHANGE_WORKER_FIRED\";\r\nconst GET_WORKER_DATA_BY_ID = \"GET_WORKER_DATA_BY_ID\";\r\nconst SET_ID_FOR_DELETE = \"SET_ID_FOR_DELETE\";\r\nconst CLEAR_EDIT_BLOCK = \"CLEAR_EDIT_BLOCK\";\r\n\r\nconst DELETE_WORKER = \"DELETE_WORKER\";\r\n\r\nlet initialState = {\r\n    workers: [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Андрей\",\r\n            \"position\": 'Programmer',\r\n            \"birth_date\": \"2000-05-24\",\r\n            \"sex\": \"муж.\",\r\n            \"fired\": false,\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"name\": \"Григорий\",\r\n            \"position\": 'Programmer',\r\n            \"birth_date\": \"2000-05-24\",\r\n            \"sex\": \"муж.\",\r\n            \"fired\": false,\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"name\": \"Давид\",\r\n            \"position\": 'Programmer',\r\n            \"birth_date\": \"2000-05-24\",\r\n            \"sex\": \"муж.\",\r\n            \"fired\": false,\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"name\": \"Алёна\",\r\n            \"position\": 'Programmer',\r\n            \"birth_date\": \"2000-05-24\",\r\n            \"sex\": \"жен.\",\r\n            \"fired\": false,\r\n        },\r\n    ],\r\n    NewWorker: {\r\n        name: \"\",\r\n        position: \"\",\r\n        birth_date: \"2000-05-24\",\r\n        sex: \"\",\r\n        fired: false,\r\n    },\r\n    deleteId: undefined,\r\n    count: 5,\r\n    errorMessage: \"\"\r\n\r\n};\r\n\r\nconst workersReducer = (store = initialState, action) => {\r\n    switch (action.type) {\r\n        case CREATE_NEW_WORKER:\r\n            if (store.NewWorker.name !== \"\" && store.NewWorker.position !== \"\") {\r\n                store.count += 1;\r\n                store.errorMessage=\"\"\r\n                let newWorker = {\r\n                    \"id\": store.count,\r\n                    \"name\": store.NewWorker.name,\r\n                    \"position\": store.NewWorker.position,\r\n                    \"birth_date\": store.NewWorker.birth_date,\r\n                    \"sex\": store.NewWorker.sex,\r\n                    \"fired\": store.NewWorker.fired,\r\n                }\r\n                return {...store, workers: [...store.workers, newWorker],deleteId: store.count}\r\n            } else {\r\n                store.errorMessage = \"Поля ФИО и Должность должны быть заполнены\";\r\n                return store;\r\n            }\r\n        case SET_ID_FOR_DELETE:\r\n            if (action.deleteId !== undefined) {\r\n                return {\r\n                    ...store,\r\n                    deleteId: action.deleteId\r\n                }\r\n            } else {\r\n                return store;\r\n            }\r\n        case DELETE_WORKER:\r\n            if (store.deleteId !== undefined) {\r\n                const newWorkers = store.workers.filter(n => n.id !== store.deleteId);\r\n                return {\r\n                    ...store, workers: newWorkers, deleteId: undefined\r\n                }\r\n            }\r\n            break;\r\n        case CHANGE_WORKER_NAME:\r\n            if(store.deleteId){\r\n                for (let i=0; i<store.workers.length; i++){\r\n                    if(store.workers[i].id === store.deleteId){\r\n                        store.workers[i].name = action.name;\r\n                    }\r\n                }\r\n                return {\r\n                    ...store,\r\n                    NewWorker: {...store.NewWorker, name: action.name }\r\n                };\r\n            }\r\n            if (action.name !== undefined) {\r\n                return {\r\n                    ...store,\r\n                    NewWorker: {...store.NewWorker, name: action.name }\r\n                }\r\n            }\r\n            break;\r\n        case CHANGE_WORKER_POSITION:\r\n            if(store.deleteId){\r\n                for (let i=0; i<store.workers.length; i++){\r\n                    if(store.workers[i].id === store.deleteId){\r\n                        store.workers[i].position = action.position;\r\n                    }\r\n                }\r\n                return {\r\n                    ...store,\r\n                    NewWorker: {...store.NewWorker, position: action.position }\r\n                }\r\n            }\r\n            if (action.position !== undefined) {\r\n                return {\r\n                    ...store,\r\n                    NewWorker: {...store.NewWorker, position: action.position }\r\n                }\r\n            }\r\n            break;\r\n        case CHANGE_WORKER_BIRTH_DATE:\r\n            if(store.deleteId){\r\n                for (let i=0; i<store.workers.length; i++){\r\n                    if(store.workers[i].id === store.deleteId){\r\n                        store.workers[i].birth_date = action.birth_date;\r\n                    }\r\n                }\r\n                return {\r\n                    ...store, NewWorker: {...store.NewWorker, birth_date: action.birth_date }\r\n                }\r\n            }\r\n            if (action.birth_date !== undefined) {\r\n                return {\r\n                    ...store, NewWorker: {...store.NewWorker, birth_date: action.birth_date }\r\n                }\r\n            }\r\n            break;\r\n        case CHANGE_WORKER_SEX:\r\n            if(store.deleteId){\r\n                for (let i=0; i<store.workers.length; i++){\r\n                    if(store.workers[i].id === store.deleteId){\r\n                        store.workers[i].sex = action.sex;\r\n                    }\r\n                }\r\n                return {\r\n                    ...store, NewWorker: {...store.NewWorker, sex: action.sex }\r\n                }\r\n            }\r\n            if (action.sex !== undefined) {\r\n                return {\r\n                    ...store, NewWorker: {...store.NewWorker, sex: action.sex }\r\n                }\r\n            }\r\n            break;\r\n        case GET_WORKER_DATA_BY_ID:\r\n            if (action.id !== undefined) {\r\n                let needPerson;\r\n                for (let i=0; i<store.workers.length; i++){\r\n                    if(store.workers[i].id === action.id){\r\n                        needPerson = store.workers[i];\r\n                    }\r\n                }\r\n                store.NewWorker = needPerson;\r\n                return store;\r\n            }\r\n            break;\r\n        case CHANGE_WORKER_FIRED:\r\n            if(store.deleteId){\r\n                for (let i=0; i<store.workers.length; i++){\r\n                    if(store.workers[i].id === store.deleteId){\r\n                        store.workers[i].fired = action.fired;\r\n                    }\r\n                }\r\n                return {\r\n                    ...store, NewWorker: {...store.NewWorker, fired: action.fired }\r\n                }\r\n            }\r\n            if (action.fired !== undefined) {\r\n                return {\r\n                    ...store, NewWorker: {...store.NewWorker, fired: action.fired }\r\n                }\r\n            }\r\n            break;\r\n        case CLEAR_EDIT_BLOCK:\r\n            let clear = {\r\n                \"id\": \"\",\r\n                \"name\": \"\",\r\n                \"position\": \"\",\r\n                \"birth_date\": \"2000-05-24\",\r\n                \"sex\": \"\",\r\n                \"fired\": false,\r\n            }\r\n            return {...store, NewWorker: clear, deleteId: undefined}\r\n\r\n        default:\r\n            return store;\r\n    }\r\n\r\n};\r\nexport const changeWorkerName = (name) => ({type: CHANGE_WORKER_NAME,name});\r\nexport const changeWorkerPosition = (position) => ({type: CHANGE_WORKER_POSITION,position});\r\nexport const changeWorkerBirthDate = (birth_date) => ({type: CHANGE_WORKER_BIRTH_DATE,birth_date});\r\nexport const changeWorkerSex = (sex) => ({type: CHANGE_WORKER_SEX,sex});\r\nexport const changeWorkerFired = (fired) => ({type: CHANGE_WORKER_FIRED,fired});\r\nexport const addNewWorker = () => ({type: CREATE_NEW_WORKER,});\r\nexport const setDeleteId = (deleteId) => ({type: SET_ID_FOR_DELETE, deleteId});\r\nexport const deleteWorker = () => ({type: DELETE_WORKER,});\r\nexport const getWorkerById = (id) => ({type: GET_WORKER_DATA_BY_ID,id});\r\nexport const clearEditBlock = () => ({type: CLEAR_EDIT_BLOCK,});\r\n\r\nexport default workersReducer;\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport workersReducer from \"./reducers/workers_reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    workers: workersReducer,\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n\r\n}));\r\n\r\n\r\nexport default function Header(props){\r\n    const classes = useStyles();\r\n    return(\r\n        <div>\r\n            <CssBaseline />\r\n            <AppBar position=\"relative\">\r\n                <Toolbar>\r\n                    <GitHubIcon className={classes.icon} />\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        Workers\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\nexport default function WorkersTable(props) {\r\n    const workerList=props.workers.workers;\r\n    const columns = props.columns;\r\n    const classes = makeStyles({\r\n        root: {\r\n            width: '100%',\r\n        },\r\n        container: {\r\n            maxHeight: 550,\r\n        },\r\n    });\r\n\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n    const clickOnTrElement=(id)=>{\r\n        props.setNewDeleteId(id);\r\n    }\r\n\r\n    const formatDate = (date) => {\r\n        let day = \"\";\r\n        let month = \"\";\r\n        let year = \"\";\r\n        for (let i = 0; i < date.length; i++) {\r\n            if (date[i] !== \"-\") {\r\n                if (i < 4) {\r\n                    year += date[i];\r\n                }\r\n                if (i > 4 && i < 7) {\r\n                    month += date[i];\r\n                }\r\n                if (i > 7) {\r\n                    day += date[i];\r\n                }\r\n            }\r\n        }\r\n        return day + \".\" + month + \".\" + year;\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <TableContainer className={classes.container}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            {columns.map((column) => (\r\n                                <TableCell\r\n                                    key={column.id}\r\n                                    style={{minWidth: column.minWidth}}\r\n                                >\r\n                                    {column.label}\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {workerList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n                            return (\r\n                                <TableRow id={row.id} onClick={()=>clickOnTrElement(row.id)} selected={row.id === props.workers.deleteId} hover role=\"checkbox\" tabIndex={-1} key={row.id} >\r\n                                    {columns.map((column) => {\r\n                                        const value = row[column.id];\r\n                                        return (\r\n                                            <TableCell key={column.id} >\r\n                                                {typeof value === 'boolean' ? (value)?\"ДА\":\"НЕТ\" : column.id===\"birth_date\"? formatDate(value) : value}\r\n                                            </TableCell>\r\n                                        );\r\n                                    })}\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 8, 10]}\r\n                component=\"div\"\r\n                count={workerList.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n        </Paper>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport store from \"./redux-store\";\r\n\r\nconst StoreContext = React.createContext(store);\r\n\r\nexport default StoreContext;","import React from 'react';\r\nimport WorkersTable from \"./WorkersTable\";\r\nimport StoreContext from \"../../redux/StoreContext\";\r\nimport {getWorkerById, setDeleteId, } from \"../../redux/reducers/workers_reducer\";\r\n\r\nclass WorkersTableContainer extends React.Component {\r\n\r\n    columns = [\r\n        {id: 'name', label: 'ФИО', minWidth: 100},\r\n        {id: 'position', label: 'Должность', minWidth: 60},\r\n        {id: 'birth_date', label: 'Дата рождения', minWidth: 60},\r\n        {id: 'sex', label: 'Пол', minWidth: 100},\r\n        {id: 'fired', label: 'Уволен', minWidth: 60},\r\n    ];\r\n\r\n\r\n\r\n    render() {\r\n        return <StoreContext.Consumer>\r\n            {store=>{\r\n                let setNewDeleteId = (id)=>{\r\n                    store.dispatch(getWorkerById(id));\r\n                    store.dispatch(setDeleteId(id));\r\n                }\r\n                let workers = store.getState().workers;\r\n                return <WorkersTable\r\n                    columns={this.columns}\r\n                    setNewDeleteId={setNewDeleteId}\r\n                    useStyles={this.useStyles}\r\n                    workers={workers}\r\n                />\r\n            }\r\n\r\n        }\r\n\r\n        </StoreContext.Consumer>\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default WorkersTableContainer;","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '25ch',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(3),\r\n        minWidth: 150,\r\n    },\r\n}));\r\n\r\n\r\nconst EditBlock = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <form className={classes.root} noValidate autoComplete=\"off\" style={{margin: 20}}>\r\n            <TextField onChange={(e) => {props.onChangeWorkerName(e.target.value)}}\r\n                       value={props.workerData.name} id=\"name\" label=\"ФИО\"\r\n                       variant=\"outlined\" fullWidth style={{margin: 10}}/>\r\n            <TextField\r\n                style={{margin: 10}}\r\n                id=\"birth_date\"\r\n                label=\"Дата рождения\"\r\n                type=\"date\"\r\n                onChange={(e)=>{props.onChangeWorkerBirthDate(e.target.value);}}\r\n                value={props.workerData.birth_date}\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n            <FormControl variant=\"outlined\" className={classes.formControl} style={{margin: 10}}>\r\n                <InputLabel id=\"select-outlined-label\">Должность</InputLabel>\r\n                <Select\r\n                    labelId=\"select-outlined-label\"\r\n                    id=\"position\"\r\n                    value={props.workerData.position}\r\n                    onChange={(e) => {props.onChangeWorkerPosition(e.target.value)}}\r\n                    label=\"Должность\"\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>Должность</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={\"Programmer\"}>Programmer</MenuItem>\r\n                    <MenuItem value={\"Manager\"}>Manager</MenuItem>\r\n                    <MenuItem value={\"Analyst\"}>Analyst</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl component=\"fieldset\" style={{margin: 10}}>\r\n                <FormLabel component=\"legend\">Пол</FormLabel>\r\n                <RadioGroup aria-label=\"gender\" name=\"gender\" value={props.workerData.sex}\r\n                            onChange={(e) => props.onChangeWorkerSex(e.target.value)}>\r\n                    <FormControlLabel value=\"жен.\" control={<Radio/>} label=\"Женский\"/>\r\n                    <FormControlLabel value=\"муж.\" control={<Radio color=\"primary\"/>} label=\"Мужской\"/>\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <FormControlLabel\r\n                style={{margin: 10}}\r\n                control={\r\n                    <Switch\r\n                        checked={props.workerData.fired}\r\n                        onChange={(e)=>props.onChangeWorkerFired(e.target.checked)}\r\n                        name=\"checked\"\r\n                        color=\"primary\"\r\n                    />\r\n                }\r\n                label=\"Уволен\"\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default EditBlock;\r\n\r\n","import React from 'react';\r\nimport StoreContext from \"../../redux/StoreContext\";\r\nimport EditBlock from \"./EditBlock\";\r\nimport {\r\n    changeWorkerBirthDate,\r\n    changeWorkerFired,\r\n    changeWorkerName,\r\n    changeWorkerPosition,\r\n    changeWorkerSex,\r\n} from \"../../redux/reducers/workers_reducer\";\r\n\r\nclass EditBlockContainer extends React.Component {\r\n\r\n\r\n    render() {\r\n        return <>\r\n            <StoreContext.Consumer>\r\n                {store => {\r\n\r\n                    let workerData = store.getState().workers;\r\n                    let changeWorkerBirthDateAC = (birthDate) => store.dispatch(changeWorkerBirthDate(birthDate));\r\n                    let changeWorkerFiredAC = (fired) => store.dispatch(changeWorkerFired(fired));\r\n                    let changeWorkerNameAC = (name) => store.dispatch(changeWorkerName(name));\r\n                    let changeWorkerPositionAC = (position) => store.dispatch(changeWorkerPosition(position));\r\n                    let changeWorkerSexAC = (sex) => store.dispatch(changeWorkerSex(sex));\r\n                    return <EditBlock\r\n                        onChangeWorkerBirthDate={changeWorkerBirthDateAC}\r\n                        onChangeWorkerFired={changeWorkerFiredAC}\r\n                        onChangeWorkerName={changeWorkerNameAC}\r\n                        onChangeWorkerPosition={changeWorkerPositionAC}\r\n                        onChangeWorkerSex={changeWorkerSexAC}\r\n                        workerData={workerData.NewWorker}\r\n                    />\r\n                }\r\n                }\r\n            </StoreContext.Consumer>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default EditBlockContainer;","import Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport WorkersTableContainer from \"../WorkersTable/WorkersTableContainer\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport EditBlockContainer from \"../EditBlock/EditBlockContainer\";\r\n\r\n\r\nexport default function Main(props) {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n            marginTop: theme.spacing(3),\r\n        },\r\n        rootGrid: {\r\n            paddingTop: theme.spacing(8),\r\n            paddingBottom: theme.spacing(8),\r\n        },\r\n\r\n\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <main>\r\n        <Container className={classes.rootGrid}>\r\n            <Grid container className={classes.root} justify={'center'} spacing={2}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Список работников\r\n                    </Typography>\r\n                    <WorkersTableContainer />\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Карточка работника\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" noWrap color={\"secondary\"}>\r\n                        {props.workers.errorMessage}\r\n                    </Typography>\r\n                    <Grid item md={12}>\r\n                        <EditBlockContainer />\r\n                    </Grid>\r\n                    <Grid item md={12}>\r\n                        <ButtonGroup size=\"large\" aria-label=\"large outlined primary button group\">\r\n                            <Button onClick={()=>props.AddNewWorker()} color=\"primary\">Добавить</Button>\r\n                            <Button onClick={()=>props.DeleteWorker()} disabled={(undefined === props.workers.deleteId)} color=\"secondary\">Удалить</Button>\r\n                            <Button onClick={()=>props.clearEdit()}>Очистка</Button>\r\n                        </ButtonGroup>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    </main>\r\n    )\r\n}","import React from 'react';\r\nimport Main from \"./Main\";\r\nimport StoreContext from \"../../redux/StoreContext\";\r\nimport {addNewWorker, clearEditBlock, deleteWorker} from \"../../redux/reducers/workers_reducer\";\r\n\r\nclass MainContainer extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n        return <>\r\n            <StoreContext.Consumer>\r\n                {store=>{\r\n                    let workers = store.getState().workers;\r\n                    let onAddNewWorker = ()=>{\r\n                        store.dispatch(addNewWorker())\r\n                    }\r\n                    let DeleteWorker=()=>{\r\n                        store.dispatch(deleteWorker())\r\n                        store.dispatch(clearEditBlock())\r\n                    }\r\n                    let clearEdit=()=>{\r\n                        store.dispatch(clearEditBlock())\r\n                    }\r\n\r\n\r\n                    return <Main\r\n                        workers={workers}\r\n                        clearEdit={clearEdit}\r\n                        DeleteWorker={DeleteWorker}\r\n                        AddNewWorker={onAddNewWorker}\r\n                    />\r\n                }\r\n            }\r\n            </StoreContext.Consumer>\r\n        </>\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default MainContainer;","import Typography from \"@material-ui/core/Typography\";\r\nimport React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footer: {\r\n        padding: theme.spacing(6),\r\n    },\r\n}));\r\n\r\n\r\nexport default function Footer(){\r\n    const classes = useStyles();\r\n    return(\r\n        <footer className={classes.footer}>\r\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n                Junior developer\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\r\n                Martynov Danil\r\n            </Typography>\r\n        </footer>\r\n\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport store from \"./redux/redux-store\";\nimport * as serviceWorker from './serviceWorker';\nimport Header from \"./components/Header/Header\";\nimport MainContainer from \"./components/Main/MainContainer\";\nimport Footer from \"./components/Footer/Footer\";\nimport StoreContext from \"./redux/StoreContext\";\n\nconst App = (props)=>{\n    return(\n        <>\n            <Header />\n            <MainContainer />\n            <Footer/>\n        </>\n    )\n}\n\n\nconst rerenderEntireTree =()=>{\n    ReactDOM.render(\n        <StoreContext.Provider value={store}>\n            <App />\n        </StoreContext.Provider>,\n        document.getElementById('root')\n    );\n};\n\n\nrerenderEntireTree();\n\n\nstore.subscribe(()=> {\n    rerenderEntireTree();\n});\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}